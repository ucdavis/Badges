@model Badges.Models.Student.ExperienceEditModel

<!-- Modal -->
<div id="cropwindow" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="feedback-label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h3>Crop image</h3>
            </div>

                <div class="modal-body">
                    <p>Crop your image:</p>
                        <img id="sandbox" />
                    <input id="cropresult" type="hidden" name="QueryString" />
                </div>
                <div class="modal-footer">
                    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
                </div>

        </div>
    </div>
</div>

<fieldset>
<div class="row">
    <legend class="intro col-md-7">The heart of our system is to reflect on your experiences in the field, around campus, and anywhere you find learning. Record your experience below.</legend>
</div>

<div class="row">
    <div class="col-md-10 col-md-offset-1">
        <h3>The basics</h3>
        <p class="helptext">Please note: the experience title, type, brief description, and photo are required and will always be visible.</p>
    </div>
</div>    
<div class="row">
    <div class="form-group col-md-7 col-md-offset-1">
        <!--@Html.LabelFor(x => x.Experience.Name)-->
        @Html.TextBoxFor(x => x.Experience.Name, new { @class="form-control", placeholder="Experience Title"})
        @Html.ValidationMessageFor(x => x.Experience.Name)   
    </div>
    <div class="form-group col-md-3">
        <!--@Html.Label("Experience_ExperienceType", "Experience Type")-->
        @this.Select("Experience.ExperienceType").Id("Experience_ExperienceType").Class("form-control").Options(Model.ExperienceTypes, x=>x.Id, x=>x.Name).Selected(Model.Experience.ExperienceType != null ? Model.Experience.ExperienceType.Id : default(Guid))
    </div>
</div>
<div class="row">
    <div class="form-group col-md-10 col-md-offset-1">
        <!--@Html.LabelFor(x => x.Experience.Description)-->
        @Html.TextBoxFor(x => x.Experience.Description, new { @class="form-control", placeholder="Brief Description", maxlength="140" })
        @Html.ValidationMessageFor(x => x.Experience.Description)
    </div>
</div>
    <div class="row">
        <span class="field-validation-valid" data-valmsg-for="CoverImage" data-valmsg-replace="true"></span>
        <div class="form-group cover-photo col-md-10 col-md-offset-1">
            @if (string.IsNullOrWhiteSpace(Model.Experience.CoverImageUrl))
            {
                <img id="cover-preview" src="http://f.cl.ly/items/373L0L3w163g3A2o3h0c/exp-placeholder.jpg" alt="cover photo" style="display: block;" />
    <input type="file" id="cover-image" class="form-control" accept="image/*" name="CoverImage" placeholder="Upload Cover Photo" />
            }
            else
            {
                <img id="cover-preview" src="@Model.Experience.CoverImageUrl" alt="cover photo" style="display: block;" />
    <input type="file" id="cover-image" class="form-control" accept="image/*" name="CoverImage" onchange="launchCropper(this.value)" placeholder="Replace Cover Photo" />

            }
        </div>
    </div>
<div class="row">
    <div class="form-group col-md-10 col-md-offset-1">
        <!--@Html.LabelFor(x => x.Experience.Details)-->
        @Html.Label("Experience_Details", "More about your experience")
        <p class="helptext">In case you need more than 140 characters to describe your experience.</p>
        @Html.TextAreaFor(x => x.Experience.Details, new { @class="form-control", placeholder="All the 411 goes here. Is that too nineties?"})
        @Html.ValidationMessageFor(x => x.Experience.Details)   
    </div>
</div>
<div class="row">
    <div class="leftcol col-md-6 col-md-offset-1">
        <div class="form-group">
            @Html.Label("Experience_Instructors", "Who was involved?")
            <p class="helptext">You can include advisors, instructors, etc.</p>
            @this.MultiSelect("Experience.Instructors").Id("Experience_Instructors").Class("form-control").Attr("data-placeholder", "Choose Your Instructors").Options(Model.Instructors, x=>x.Id, x=>x.DisplayName).Selected(Model.Experience.Instructors.Any() ? Model.Experience.Instructors.Select(x=>x.Id) : null)
        </div>   
        <div class="form-group">
            <!--@Html.LabelFor(x => x.Experience.Organization)-->
            @Html.TextBoxFor(x => x.Experience.Organization, new { @class="form-control", placeholder="Organization"})
            @Html.ValidationMessageFor(x => x.Experience.Organization)   
        </div> 
        <div class="form-group">
            @Html.Label("Experience.Notes", "Notes for myself")
            <p class="helptext">Leave yourself some notes about this experience. These won't show up on your public experience page.</p>
            @Html.TextAreaFor(x => x.Experience.Notes, new { @class="form-control", placeholder="Dear diary..."})
            @Html.ValidationMessageFor(x => x.Experience.Notes)
        </div>
    </div>
    <div class="rightcol col-md-4"> 
        <div class="form-group">
            @Html.Label("Experience.Location", "Where was this?")
            <p class="helptext">As general or accurate as you want!</p>
            <!--@Html.LabelFor(x => x.Experience.Location)-->
            @Html.TextBoxFor(x => x.Experience.Location, new { @class="form-control", placeholder="Location"})
            <div id="map-canvas" style="width:100%; height: 200px;"></div>
            @Html.ValidationMessageFor(x => x.Experience.Location)
        </div>
        <div class="form-group">
            @Html.Label("Experience.Start", "When was this?")
            <p class="helptext">Include at least the start date.</p>
            @Html.TextBoxFor(x => x.Experience.Start, "{0:d}", new { @class="form-control datepicker", placeholder="Start date"})
            @Html.ValidationMessageFor(x => x.Experience.Start)   
        </div>
        <div class="form-group">
            @Html.TextBoxFor(x => x.Experience.End, "{0:d}", new { @class="form-control datepicker", placeholder="End date"})
            @Html.ValidationMessageFor(x => x.Experience.End)   
        </div>
        <div class="form-group exp-viewable">
            @Html.Label("Experience.InstructorViewable", "Should this be viewable by instructors?")
            <!--@Html.LabelFor(x => x.Experience.InstructorViewable)-->
            @Html.CheckBoxFor(x => x.Experience.InstructorViewable)
            @Html.ValidationMessageFor(x => x.Experience.InstructorViewable)
        </div>
    </div>
</div>
<div class="row">       
    <div class="form-actions col-md-10 col-md-offset-1">
        <button type="submit" class="btn btn-success"><i class="icon-ok"></i>Save it</button>
        <a href="@Url.Action("Index", "Home")" class="btn btn-default"><i class="icon-remove button-icon"></i> Cancel</a>
    </div>
</div>
</fieldset>