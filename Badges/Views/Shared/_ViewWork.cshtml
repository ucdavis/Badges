@using Badges.Core.Domain
@model SupportingWork

@switch (Model.Type)
{
    case SupportingWorkTypes.Photo:
        if (string.IsNullOrWhiteSpace(Model.Url))
        {
            <img src="@Url.Action("ViewWorkFile", "Experience", new {id = Model.Id})" alt="@Model.Description" />
        }
        else
        {
            <img src="@Model.Url" alt="@Model.Description" />
        }
        <p class="work-desc">@Model.Description</p>
        break;
    case SupportingWorkTypes.Text:
        <h4>@Model.Description</h4>
        <blockquote>
            @(Model.Notes.Length > 256 ? Model.Notes.Substring(250) + "..." : Model.Notes)
        </blockquote>
        break;
    case SupportingWorkTypes.Video:
        var embedUrl = Model.GetEmbedUrl();
        if (!string.IsNullOrWhiteSpace(embedUrl))
        {
            <iframe src="@Model.GetEmbedUrl()" width="100%" height="100%" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>
            <p class="work-desc">@Model.Description</p>
        }
        break;
    case SupportingWorkTypes.Link:
        <p>
            <i class="icon-link icon-2x"></i> <a href="@Model.Url" class="target" target="_blank"><span>@Model.Description</span> @Model.Url</a>
        </p>
        break;
    case SupportingWorkTypes.File:
        <a href="@Url.Action("ViewWorkFile", "Experience", new {id = Model.Id})" class="target">@Model.Description <i class="target icon-download icon-2x"></i></a>
        <span class="footer"><a href="@Url.Action("ViewWorkFile", "Experience", new {id = Model.Id})" class="target">Download @Model.Name</a></span>
        break;
    case SupportingWorkTypes.Audio:
        <audio controls>
            <source src="@Url.Action("ViewWorkFile", "Experience", new {id = Model.Id})" type="@Model.ContentType">
            <embed height="50" width="100" src="@Url.Action("ViewWorkFile", "Experience", new {id = Model.Id})">
        </audio>
        <p class="work-desc">@Model.Description</p>
        break;
}